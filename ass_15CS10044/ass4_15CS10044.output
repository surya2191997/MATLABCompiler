Terminals unused in grammar

   LONG


Grammar

    0 $accept: translation-unit $end

    1 primary-expression: IDENTIFIER
    2                   | INTEGER_CONSTANT
    3                   | FLOAT_CONSTANT
    4                   | CHAR_CONSTANT
    5                   | STRING
    6                   | '(' expression ')'

    7 postfix-expression: primary-expression
    8                   | postfix-expression '[' expression ']'
    9                   | postfix-expression '(' argument-expression-list ')'
   10                   | postfix-expression '(' ')'
   11                   | postfix-expression '.' IDENTIFIER
   12                   | postfix-expression PTR_OP IDENTIFIER
   13                   | postfix-expression INC_OP
   14                   | postfix-expression DEC_OP
   15                   | postfix-expression TRA_OP

   16 argument-expression-list: assignment-expression
   17                         | argument-expression-list ',' assignment-expression

   18 unary-operator: '&'
   19               | '*'
   20               | '+'
   21               | '-'

   22 unary-expression: postfix-expression
   23                 | INC_OP unary-expression
   24                 | DEC_OP unary-expression
   25                 | unary-operator cast-expression

   26 cast-expression: unary-expression

   27 multiplicative-expression: cast-expression
   28                          | multiplicative-expression '*' cast-expression
   29                          | multiplicative-expression '/' cast-expression
   30                          | multiplicative-expression '%' cast-expression

   31 additive-expression: multiplicative-expression
   32                    | additive-expression '+' multiplicative-expression
   33                    | additive-expression '-' multiplicative-expression

   34 shift-expression: additive-expression
   35                 | shift-expression LSHIFT_OP additive-expression
   36                 | shift-expression RSHIFT_OP additive-expression

   37 relational-expression: shift-expression
   38                      | relational-expression '<' shift-expression
   39                      | relational-expression '>' shift-expression
   40                      | relational-expression LEQ_OP shift-expression
   41                      | relational-expression GEQ_OP shift-expression

   42 equality-expression: relational-expression
   43                    | equality-expression EQ_OP relational-expression
   44                    | equality-expression NEQ_OP relational-expression

   45 AND-expression: equality-expression
   46               | AND-expression '&' equality-expression

   47 exclusive-OR-expression: AND-expression
   48                        | exclusive-OR-expression '^' AND-expression

   49 inclusive-OR-expression: exclusive-OR-expression
   50                        | inclusive-OR-expression '|' exclusive-OR-expression

   51 logical-AND-expression: inclusive-OR-expression
   52                       | logical-AND-expression AND_OP M inclusive-OR-expression

   53 logical-OR-expression: logical-AND-expression
   54                      | logical-OR-expression OR_OP M logical-AND-expression

   55 conditional-expression: logical-OR-expression
   56                       | logical-OR-expression N '?' M expression N ':' M conditional-expression

   57 assignment-expression: conditional-expression
   58                      | unary-expression assignment-operator assignment-expression

   59 assignment-operator: '='
   60                    | MULA_OP
   61                    | DIVA_OP
   62                    | REMA_OP
   63                    | ADDA_OP
   64                    | SUBA_OP
   65                    | LSA_OP
   66                    | RSA_OP
   67                    | ANDA_OP
   68                    | POWA_OP
   69                    | ORA_OP

   70 expression: assignment-expression
   71           | expression ',' assignment-expression

   72 constant-expression: conditional-expression

   73 declaration: declaration-specifiers init-declarator-list ';'
   74            | declaration-specifiers ';'

   75 declaration-specifiers: type-specifiers declaration-specifiers
   76                       | type-specifiers

   77 init-declarator-list: init-declarator
   78                     | init-declarator-list ',' init-declarator

   79 init-declarator: declarator
   80                | declarator '=' initializer

   81 type-specifiers: VOID
   82                | CHAR
   83                | SHORT
   84                | INT
   85                | FLOAT
   86                | DOUBLE
   87                | MATRIX
   88                | SIGNED
   89                | UNSIGNED
   90                | BOOL

   91 declarator: pointer direct-declarator
   92           | direct-declarator

   93 direct-declarator: IDENTIFIER
   94                  | '(' declarator ')'
   95                  | direct-declarator '[' assignment-expression ']'
   96                  | direct-declarator '[' ']'
   97                  | direct-declarator '(' parameter-type-list ')'
   98                  | direct-declarator '(' identifier-list ')'
   99                  | direct-declarator '(' ')'

  100 pointer: '*' pointer
  101        | '*'

  102 parameter-type-list: parameter-list

  103 parameter-list: parameter-declaration
  104               | parameter-list ',' parameter-declaration

  105 parameter-declaration: declaration-specifiers declarator
  106                      | declaration-specifiers

  107 identifier-list: IDENTIFIER
  108                | identifier-list ',' IDENTIFIER

  109 initializer: assignment-expression
  110            | '{' initializer-row-list '}'

  111 initializer-row-list: initializer-row
  112                     | initializer-row-list ';' initializer-row

  113 initializer-row: designation initializer
  114                | initializer
  115                | initializer-row ',' designation initializer
  116                | initializer-row ',' initializer

  117 designation: designator-list '='

  118 designator-list: designator
  119                | designator-list designator

  120 designator: '[' constant-expression ']'
  121           | '.' IDENTIFIER

  122 statement: labeled-statement
  123          | compound-statement
  124          | expression-statement
  125          | selection-statement
  126          | iteration-statement
  127          | jump-statement

  128 expression-statement: expression ';'
  129                     | ';'

  130 labeled-statement: IDENTIFIER ':' statement
  131                  | CASE constant-expression ':' statement
  132                  | DEFAULT ':' statement

  133 compound-statement: '{' block-item-list '}'
  134                   | '{' '}'

  135 block-item-list: block-item
  136                | block-item-list M block-item

  137 block-item: declaration
  138           | statement

  139 selection-statement: IF '(' expression N ')' M statement N
  140                    | IF '(' expression N ')' M statement N ELSE M statement
  141                    | SWITCH '(' expression ')' statement

  142 iteration-statement: WHILE M '(' expression N ')' M statement
  143                    | DO M statement M WHILE '(' expression N ')'
  144                    | FOR '(' expression-statement M expression-statement N M expression N ')' M statement
  145                    | FOR '(' declaration expression-statement expression ')' statement
  146                    | FOR '(' declaration expression-statement ')' statement

  147 jump-statement: GOTO IDENTIFIER ';'
  148               | CONTINUE ';'
  149               | BREAK ';'
  150               | RETURN expression ';'
  151               | RETURN ';'

  152 translation-unit: external-declaration
  153                 | translation-unit external-declaration

  154 external-declaration: function-definition
  155                     | declaration

  156 function-definition: declaration-specifiers declarator declaration-list compound-statement
  157                    | declaration-specifiers declarator F compound-statement

  158 declaration-list: declaration
  159                 | declaration-list declaration

  160 M: %empty

  161 N: %empty

  162 F: %empty


Terminals, with rules where they appear

$end (0) 0
'%' (37) 30
'&' (38) 18 46
'(' (40) 6 9 10 94 97 98 99 139 140 141 142 143 144 145 146
')' (41) 6 9 10 94 97 98 99 139 140 141 142 143 144 145 146
'*' (42) 19 28 100 101
'+' (43) 20 32
',' (44) 17 71 78 104 108 115 116
'-' (45) 21 33
'.' (46) 11 121
'/' (47) 29
':' (58) 56 130 131 132
';' (59) 73 74 112 128 129 147 148 149 150 151
'<' (60) 38
'=' (61) 59 80 117
'>' (62) 39
'?' (63) 56
'[' (91) 8 95 96 120
']' (93) 8 95 96 120
'^' (94) 48
'{' (123) 110 133 134
'|' (124) 50
'}' (125) 110 133 134
error (256)
INTEGER_CONSTANT (258) 2
FLOAT_CONSTANT (259) 3
CHAR_CONSTANT (260) 4
IDENTIFIER (261) 1 11 12 93 107 108 121 130 147
STRING (262) 5
UNSIGNED (263) 89
BREAK (264) 149
RETURN (265) 150 151
VOID (266) 81
CASE (267) 131
FLOAT (268) 85
SHORT (269) 83
CHAR (270) 82
FOR (271) 144 145 146
SIGNED (272) 88
WHILE (273) 142 143
GOTO (274) 147
BOOL (275) 90
CONTINUE (276) 148
IF (277) 139 140
DEFAULT (278) 132
DO (279) 143
INT (280) 84
SWITCH (281) 141
DOUBLE (282) 86
LONG (283)
ELSE (284) 140
MATRIX (285) 87
PTR_OP (286) 12
INC_OP (287) 13 23
DEC_OP (288) 14 24
LSHIFT_OP (289) 35
RSHIFT_OP (290) 36
LEQ_OP (291) 40
GEQ_OP (292) 41
EQ_OP (293) 43
NEQ_OP (294) 44
AND_OP (295) 52
OR_OP (296) 54
MULA_OP (297) 60
DIVA_OP (298) 61
REMA_OP (299) 62
ADDA_OP (300) 63
SUBA_OP (301) 64
LSA_OP (302) 65
RSA_OP (303) 66
ANDA_OP (304) 67
POWA_OP (305) 68
ORA_OP (306) 69
TRA_OP (307) 15
"then" (308)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
primary-expression (77)
    on left: 1 2 3 4 5 6, on right: 7
postfix-expression (78)
    on left: 7 8 9 10 11 12 13 14 15, on right: 8 9 10 11 12 13 14
    15 22
argument-expression-list (79)
    on left: 16 17, on right: 9 17
unary-operator (80)
    on left: 18 19 20 21, on right: 25
unary-expression (81)
    on left: 22 23 24 25, on right: 23 24 26 58
cast-expression (82)
    on left: 26, on right: 25 27 28 29 30
multiplicative-expression (83)
    on left: 27 28 29 30, on right: 28 29 30 31 32 33
additive-expression (84)
    on left: 31 32 33, on right: 32 33 34 35 36
shift-expression (85)
    on left: 34 35 36, on right: 35 36 37 38 39 40 41
relational-expression (86)
    on left: 37 38 39 40 41, on right: 38 39 40 41 42 43 44
equality-expression (87)
    on left: 42 43 44, on right: 43 44 45 46
AND-expression (88)
    on left: 45 46, on right: 46 47 48
exclusive-OR-expression (89)
    on left: 47 48, on right: 48 49 50
inclusive-OR-expression (90)
    on left: 49 50, on right: 50 51 52
logical-AND-expression (91)
    on left: 51 52, on right: 52 53 54
logical-OR-expression (92)
    on left: 53 54, on right: 54 55 56
conditional-expression (93)
    on left: 55 56, on right: 56 57 72
assignment-expression (94)
    on left: 57 58, on right: 16 17 58 70 71 95 109
assignment-operator (95)
    on left: 59 60 61 62 63 64 65 66 67 68 69, on right: 58
expression (96)
    on left: 70 71, on right: 6 8 56 71 128 139 140 141 142 143 144
    145 150
constant-expression (97)
    on left: 72, on right: 120 131
declaration (98)
    on left: 73 74, on right: 137 145 146 155 158 159
declaration-specifiers (99)
    on left: 75 76, on right: 73 74 75 105 106 156 157
init-declarator-list (100)
    on left: 77 78, on right: 73 78
init-declarator (101)
    on left: 79 80, on right: 77 78
type-specifiers (102)
    on left: 81 82 83 84 85 86 87 88 89 90, on right: 75 76
declarator (103)
    on left: 91 92, on right: 79 80 94 105 156 157
direct-declarator (104)
    on left: 93 94 95 96 97 98 99, on right: 91 92 95 96 97 98 99
pointer (105)
    on left: 100 101, on right: 91 100
parameter-type-list (106)
    on left: 102, on right: 97
parameter-list (107)
    on left: 103 104, on right: 102 104
parameter-declaration (108)
    on left: 105 106, on right: 103 104
identifier-list (109)
    on left: 107 108, on right: 98 108
initializer (110)
    on left: 109 110, on right: 80 113 114 115 116
initializer-row-list (111)
    on left: 111 112, on right: 110 112
initializer-row (112)
    on left: 113 114 115 116, on right: 111 112 115 116
designation (113)
    on left: 117, on right: 113 115
designator-list (114)
    on left: 118 119, on right: 117 119
designator (115)
    on left: 120 121, on right: 118 119
statement (116)
    on left: 122 123 124 125 126 127, on right: 130 131 132 138 139
    140 141 142 143 144 145 146
expression-statement (117)
    on left: 128 129, on right: 124 144 145 146
labeled-statement (118)
    on left: 130 131 132, on right: 122
compound-statement (119)
    on left: 133 134, on right: 123 156 157
block-item-list (120)
    on left: 135 136, on right: 133 136
block-item (121)
    on left: 137 138, on right: 135 136
selection-statement (122)
    on left: 139 140 141, on right: 125
iteration-statement (123)
    on left: 142 143 144 145 146, on right: 126
jump-statement (124)
    on left: 147 148 149 150 151, on right: 127
translation-unit (125)
    on left: 152 153, on right: 0 153
external-declaration (126)
    on left: 154 155, on right: 152 153
function-definition (127)
    on left: 156 157, on right: 154
declaration-list (128)
    on left: 158 159, on right: 156 159
M (129)
    on left: 160, on right: 52 54 56 136 139 140 142 143 144
N (130)
    on left: 161, on right: 56 139 140 142 143 144
F (131)
    on left: 162, on right: 157


State 0

    0 $accept: . translation-unit $end

    UNSIGNED  shift, and go to state 1
    VOID      shift, and go to state 2
    FLOAT     shift, and go to state 3
    SHORT     shift, and go to state 4
    CHAR      shift, and go to state 5
    SIGNED    shift, and go to state 6
    BOOL      shift, and go to state 7
    INT       shift, and go to state 8
    DOUBLE    shift, and go to state 9
    MATRIX    shift, and go to state 10

    declaration             go to state 11
    declaration-specifiers  go to state 12
    type-specifiers         go to state 13
    translation-unit        go to state 14
    external-declaration    go to state 15
    function-definition     go to state 16


State 1

   89 type-specifiers: UNSIGNED .

    $default  reduce using rule 89 (type-specifiers)


State 2

   81 type-specifiers: VOID .

    $default  reduce using rule 81 (type-specifiers)


State 3

   85 type-specifiers: FLOAT .

    $default  reduce using rule 85 (type-specifiers)


State 4

   83 type-specifiers: SHORT .

    $default  reduce using rule 83 (type-specifiers)


State 5

   82 type-specifiers: CHAR .

    $default  reduce using rule 82 (type-specifiers)


State 6

   88 type-specifiers: SIGNED .

    $default  reduce using rule 88 (type-specifiers)


State 7

   90 type-specifiers: BOOL .

    $default  reduce using rule 90 (type-specifiers)


State 8

   84 type-specifiers: INT .

    $default  reduce using rule 84 (type-specifiers)


State 9

   86 type-specifiers: DOUBLE .

    $default  reduce using rule 86 (type-specifiers)


State 10

   87 type-specifiers: MATRIX .

    $default  reduce using rule 87 (type-specifiers)


State 11

  155 external-declaration: declaration .

    $default  reduce using rule 155 (external-declaration)


State 12

   73 declaration: declaration-specifiers . init-declarator-list ';'
   74            | declaration-specifiers . ';'
  156 function-definition: declaration-specifiers . declarator declaration-list compound-statement
  157                    | declaration-specifiers . declarator F compound-statement

    IDENTIFIER  shift, and go to state 17
    '('         shift, and go to state 18
    '*'         shift, and go to state 19
    ';'         shift, and go to state 20

    init-declarator-list  go to state 21
    init-declarator       go to state 22
    declarator            go to state 23
    direct-declarator     go to state 24
    pointer               go to state 25


State 13

   75 declaration-specifiers: type-specifiers . declaration-specifiers
   76                       | type-specifiers .

    UNSIGNED  shift, and go to state 1
    VOID      shift, and go to state 2
    FLOAT     shift, and go to state 3
    SHORT     shift, and go to state 4
    CHAR      shift, and go to state 5
    SIGNED    shift, and go to state 6
    BOOL      shift, and go to state 7
    INT       shift, and go to state 8
    DOUBLE    shift, and go to state 9
    MATRIX    shift, and go to state 10

    $default  reduce using rule 76 (declaration-specifiers)

    declaration-specifiers  go to state 26
    type-specifiers         go to state 13


State 14

    0 $accept: translation-unit . $end
  153 translation-unit: translation-unit . external-declaration

    $end      shift, and go to state 27
    UNSIGNED  shift, and go to state 1
    VOID      shift, and go to state 2
    FLOAT     shift, and go to state 3
    SHORT     shift, and go to state 4
    CHAR      shift, and go to state 5
    SIGNED    shift, and go to state 6
    BOOL      shift, and go to state 7
    INT       shift, and go to state 8
    DOUBLE    shift, and go to state 9
    MATRIX    shift, and go to state 10

    declaration             go to state 11
    declaration-specifiers  go to state 12
    type-specifiers         go to state 13
    external-declaration    go to state 28
    function-definition     go to state 16


State 15

  152 translation-unit: external-declaration .

    $default  reduce using rule 152 (translation-unit)


State 16

  154 external-declaration: function-definition .

    $default  reduce using rule 154 (external-declaration)


State 17

   93 direct-declarator: IDENTIFIER .

    $default  reduce using rule 93 (direct-declarator)


State 18

   94 direct-declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 17
    '('         shift, and go to state 18
    '*'         shift, and go to state 19

    declarator         go to state 29
    direct-declarator  go to state 24
    pointer            go to state 25


State 19

  100 pointer: '*' . pointer
  101        | '*' .

    '*'  shift, and go to state 19

    $default  reduce using rule 101 (pointer)

    pointer  go to state 30


State 20

   74 declaration: declaration-specifiers ';' .

    $default  reduce using rule 74 (declaration)


State 21

   73 declaration: declaration-specifiers init-declarator-list . ';'
   78 init-declarator-list: init-declarator-list . ',' init-declarator

    ','  shift, and go to state 31
    ';'  shift, and go to state 32


State 22

   77 init-declarator-list: init-declarator .

    $default  reduce using rule 77 (init-declarator-list)


State 23

   79 init-declarator: declarator .
   80                | declarator . '=' initializer
  156 function-definition: declaration-specifiers declarator . declaration-list compound-statement
  157                    | declaration-specifiers declarator . F compound-statement

    UNSIGNED  shift, and go to state 1
    VOID      shift, and go to state 2
    FLOAT     shift, and go to state 3
    SHORT     shift, and go to state 4
    CHAR      shift, and go to state 5
    SIGNED    shift, and go to state 6
    BOOL      shift, and go to state 7
    INT       shift, and go to state 8
    DOUBLE    shift, and go to state 9
    MATRIX    shift, and go to state 10
    '='       shift, and go to state 33

    '{'       reduce using rule 162 (F)
    $default  reduce using rule 79 (init-declarator)

    declaration             go to state 34
    declaration-specifiers  go to state 35
    type-specifiers         go to state 13
    declaration-list        go to state 36
    F                       go to state 37


State 24

   92 declarator: direct-declarator .
   95 direct-declarator: direct-declarator . '[' assignment-expression ']'
   96                  | direct-declarator . '[' ']'
   97                  | direct-declarator . '(' parameter-type-list ')'
   98                  | direct-declarator . '(' identifier-list ')'
   99                  | direct-declarator . '(' ')'

    '('  shift, and go to state 38
    '['  shift, and go to state 39

    $default  reduce using rule 92 (declarator)


State 25

   91 declarator: pointer . direct-declarator

    IDENTIFIER  shift, and go to state 17
    '('         shift, and go to state 18

    direct-declarator  go to state 40


State 26

   75 declaration-specifiers: type-specifiers declaration-specifiers .

    $default  reduce using rule 75 (declaration-specifiers)


State 27

    0 $accept: translation-unit $end .

    $default  accept


State 28

  153 translation-unit: translation-unit external-declaration .

    $default  reduce using rule 153 (translation-unit)


State 29

   94 direct-declarator: '(' declarator . ')'

    ')'  shift, and go to state 41


State 30

  100 pointer: '*' pointer .

    $default  reduce using rule 100 (pointer)


State 31

   78 init-declarator-list: init-declarator-list ',' . init-declarator

    IDENTIFIER  shift, and go to state 17
    '('         shift, and go to state 18
    '*'         shift, and go to state 19

    init-declarator    go to state 42
    declarator         go to state 43
    direct-declarator  go to state 24
    pointer            go to state 25


State 32

   73 declaration: declaration-specifiers init-declarator-list ';' .

    $default  reduce using rule 73 (declaration)


State 33

   80 init-declarator: declarator '=' . initializer

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    '{'               shift, and go to state 56

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 73
    initializer                go to state 74


State 34

  158 declaration-list: declaration .

    $default  reduce using rule 158 (declaration-list)


State 35

   73 declaration: declaration-specifiers . init-declarator-list ';'
   74            | declaration-specifiers . ';'

    IDENTIFIER  shift, and go to state 17
    '('         shift, and go to state 18
    '*'         shift, and go to state 19
    ';'         shift, and go to state 20

    init-declarator-list  go to state 21
    init-declarator       go to state 22
    declarator            go to state 43
    direct-declarator     go to state 24
    pointer               go to state 25


State 36

  156 function-definition: declaration-specifiers declarator declaration-list . compound-statement
  159 declaration-list: declaration-list . declaration

    UNSIGNED  shift, and go to state 1
    VOID      shift, and go to state 2
    FLOAT     shift, and go to state 3
    SHORT     shift, and go to state 4
    CHAR      shift, and go to state 5
    SIGNED    shift, and go to state 6
    BOOL      shift, and go to state 7
    INT       shift, and go to state 8
    DOUBLE    shift, and go to state 9
    MATRIX    shift, and go to state 10
    '{'       shift, and go to state 75

    declaration             go to state 76
    declaration-specifiers  go to state 35
    type-specifiers         go to state 13
    compound-statement      go to state 77


State 37

  157 function-definition: declaration-specifiers declarator F . compound-statement

    '{'  shift, and go to state 75

    compound-statement  go to state 78


State 38

   97 direct-declarator: direct-declarator '(' . parameter-type-list ')'
   98                  | direct-declarator '(' . identifier-list ')'
   99                  | direct-declarator '(' . ')'

    IDENTIFIER  shift, and go to state 79
    UNSIGNED    shift, and go to state 1
    VOID        shift, and go to state 2
    FLOAT       shift, and go to state 3
    SHORT       shift, and go to state 4
    CHAR        shift, and go to state 5
    SIGNED      shift, and go to state 6
    BOOL        shift, and go to state 7
    INT         shift, and go to state 8
    DOUBLE      shift, and go to state 9
    MATRIX      shift, and go to state 10
    ')'         shift, and go to state 80

    declaration-specifiers  go to state 81
    type-specifiers         go to state 13
    parameter-type-list     go to state 82
    parameter-list          go to state 83
    parameter-declaration   go to state 84
    identifier-list         go to state 85


State 39

   95 direct-declarator: direct-declarator '[' . assignment-expression ']'
   96                  | direct-declarator '[' . ']'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    ']'               shift, and go to state 86
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 87


State 40

   91 declarator: pointer direct-declarator .
   95 direct-declarator: direct-declarator . '[' assignment-expression ']'
   96                  | direct-declarator . '[' ']'
   97                  | direct-declarator . '(' parameter-type-list ')'
   98                  | direct-declarator . '(' identifier-list ')'
   99                  | direct-declarator . '(' ')'

    '('  shift, and go to state 38
    '['  shift, and go to state 39

    $default  reduce using rule 91 (declarator)


State 41

   94 direct-declarator: '(' declarator ')' .

    $default  reduce using rule 94 (direct-declarator)


State 42

   78 init-declarator-list: init-declarator-list ',' init-declarator .

    $default  reduce using rule 78 (init-declarator-list)


State 43

   79 init-declarator: declarator .
   80                | declarator . '=' initializer

    '='  shift, and go to state 33

    $default  reduce using rule 79 (init-declarator)


State 44

    2 primary-expression: INTEGER_CONSTANT .

    $default  reduce using rule 2 (primary-expression)


State 45

    3 primary-expression: FLOAT_CONSTANT .

    $default  reduce using rule 3 (primary-expression)


State 46

    4 primary-expression: CHAR_CONSTANT .

    $default  reduce using rule 4 (primary-expression)


State 47

    1 primary-expression: IDENTIFIER .

    $default  reduce using rule 1 (primary-expression)


State 48

    5 primary-expression: STRING .

    $default  reduce using rule 5 (primary-expression)


State 49

   23 unary-expression: INC_OP . unary-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression  go to state 57
    postfix-expression  go to state 58
    unary-operator      go to state 59
    unary-expression    go to state 88


State 50

   24 unary-expression: DEC_OP . unary-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression  go to state 57
    postfix-expression  go to state 58
    unary-operator      go to state 59
    unary-expression    go to state 89


State 51

    6 primary-expression: '(' . expression ')'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 91


State 52

   18 unary-operator: '&' .

    $default  reduce using rule 18 (unary-operator)


State 53

   19 unary-operator: '*' .

    $default  reduce using rule 19 (unary-operator)


State 54

   20 unary-operator: '+' .

    $default  reduce using rule 20 (unary-operator)


State 55

   21 unary-operator: '-' .

    $default  reduce using rule 21 (unary-operator)


State 56

  110 initializer: '{' . initializer-row-list '}'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '['               shift, and go to state 92
    '.'               shift, and go to state 93
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    '{'               shift, and go to state 56

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 73
    initializer                go to state 94
    initializer-row-list       go to state 95
    initializer-row            go to state 96
    designation                go to state 97
    designator-list            go to state 98
    designator                 go to state 99


State 57

    7 postfix-expression: primary-expression .

    $default  reduce using rule 7 (postfix-expression)


State 58

    8 postfix-expression: postfix-expression . '[' expression ']'
    9                   | postfix-expression . '(' argument-expression-list ')'
   10                   | postfix-expression . '(' ')'
   11                   | postfix-expression . '.' IDENTIFIER
   12                   | postfix-expression . PTR_OP IDENTIFIER
   13                   | postfix-expression . INC_OP
   14                   | postfix-expression . DEC_OP
   15                   | postfix-expression . TRA_OP
   22 unary-expression: postfix-expression .

    PTR_OP  shift, and go to state 100
    INC_OP  shift, and go to state 101
    DEC_OP  shift, and go to state 102
    TRA_OP  shift, and go to state 103
    '('     shift, and go to state 104
    '['     shift, and go to state 105
    '.'     shift, and go to state 106

    $default  reduce using rule 22 (unary-expression)


State 59

   25 unary-expression: unary-operator . cast-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression  go to state 57
    postfix-expression  go to state 58
    unary-operator      go to state 59
    unary-expression    go to state 107
    cast-expression     go to state 108


State 60

   26 cast-expression: unary-expression .
   58 assignment-expression: unary-expression . assignment-operator assignment-expression

    MULA_OP  shift, and go to state 109
    DIVA_OP  shift, and go to state 110
    REMA_OP  shift, and go to state 111
    ADDA_OP  shift, and go to state 112
    SUBA_OP  shift, and go to state 113
    LSA_OP   shift, and go to state 114
    RSA_OP   shift, and go to state 115
    ANDA_OP  shift, and go to state 116
    POWA_OP  shift, and go to state 117
    ORA_OP   shift, and go to state 118
    '='      shift, and go to state 119

    $default  reduce using rule 26 (cast-expression)

    assignment-operator  go to state 120


State 61

   27 multiplicative-expression: cast-expression .

    $default  reduce using rule 27 (multiplicative-expression)


State 62

   28 multiplicative-expression: multiplicative-expression . '*' cast-expression
   29                          | multiplicative-expression . '/' cast-expression
   30                          | multiplicative-expression . '%' cast-expression
   31 additive-expression: multiplicative-expression .

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 31 (additive-expression)


State 63

   32 additive-expression: additive-expression . '+' multiplicative-expression
   33                    | additive-expression . '-' multiplicative-expression
   34 shift-expression: additive-expression .

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125

    $default  reduce using rule 34 (shift-expression)


State 64

   35 shift-expression: shift-expression . LSHIFT_OP additive-expression
   36                 | shift-expression . RSHIFT_OP additive-expression
   37 relational-expression: shift-expression .

    LSHIFT_OP  shift, and go to state 126
    RSHIFT_OP  shift, and go to state 127

    $default  reduce using rule 37 (relational-expression)


State 65

   38 relational-expression: relational-expression . '<' shift-expression
   39                      | relational-expression . '>' shift-expression
   40                      | relational-expression . LEQ_OP shift-expression
   41                      | relational-expression . GEQ_OP shift-expression
   42 equality-expression: relational-expression .

    LEQ_OP  shift, and go to state 128
    GEQ_OP  shift, and go to state 129
    '<'     shift, and go to state 130
    '>'     shift, and go to state 131

    $default  reduce using rule 42 (equality-expression)


State 66

   43 equality-expression: equality-expression . EQ_OP relational-expression
   44                    | equality-expression . NEQ_OP relational-expression
   45 AND-expression: equality-expression .

    EQ_OP   shift, and go to state 132
    NEQ_OP  shift, and go to state 133

    $default  reduce using rule 45 (AND-expression)


State 67

   46 AND-expression: AND-expression . '&' equality-expression
   47 exclusive-OR-expression: AND-expression .

    '&'  shift, and go to state 134

    $default  reduce using rule 47 (exclusive-OR-expression)


State 68

   48 exclusive-OR-expression: exclusive-OR-expression . '^' AND-expression
   49 inclusive-OR-expression: exclusive-OR-expression .

    '^'  shift, and go to state 135

    $default  reduce using rule 49 (inclusive-OR-expression)


State 69

   50 inclusive-OR-expression: inclusive-OR-expression . '|' exclusive-OR-expression
   51 logical-AND-expression: inclusive-OR-expression .

    '|'  shift, and go to state 136

    $default  reduce using rule 51 (logical-AND-expression)


State 70

   52 logical-AND-expression: logical-AND-expression . AND_OP M inclusive-OR-expression
   53 logical-OR-expression: logical-AND-expression .

    AND_OP  shift, and go to state 137

    $default  reduce using rule 53 (logical-OR-expression)


State 71

   54 logical-OR-expression: logical-OR-expression . OR_OP M logical-AND-expression
   55 conditional-expression: logical-OR-expression .
   56                       | logical-OR-expression . N '?' M expression N ':' M conditional-expression

    OR_OP  shift, and go to state 138

    '?'       reduce using rule 161 (N)
    $default  reduce using rule 55 (conditional-expression)

    N  go to state 139


State 72

   57 assignment-expression: conditional-expression .

    $default  reduce using rule 57 (assignment-expression)


State 73

  109 initializer: assignment-expression .

    $default  reduce using rule 109 (initializer)


State 74

   80 init-declarator: declarator '=' initializer .

    $default  reduce using rule 80 (init-declarator)


State 75

  133 compound-statement: '{' . block-item-list '}'
  134                   | '{' . '}'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    UNSIGNED          shift, and go to state 1
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    VOID              shift, and go to state 2
    CASE              shift, and go to state 143
    FLOAT             shift, and go to state 3
    SHORT             shift, and go to state 4
    CHAR              shift, and go to state 5
    FOR               shift, and go to state 144
    SIGNED            shift, and go to state 6
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    BOOL              shift, and go to state 7
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    INT               shift, and go to state 8
    SWITCH            shift, and go to state 151
    DOUBLE            shift, and go to state 9
    MATRIX            shift, and go to state 10
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75
    '}'               shift, and go to state 153

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    declaration                go to state 155
    declaration-specifiers     go to state 35
    type-specifiers            go to state 13
    statement                  go to state 156
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    block-item-list            go to state 160
    block-item                 go to state 161
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 76

  159 declaration-list: declaration-list declaration .

    $default  reduce using rule 159 (declaration-list)


State 77

  156 function-definition: declaration-specifiers declarator declaration-list compound-statement .

    $default  reduce using rule 156 (function-definition)


State 78

  157 function-definition: declaration-specifiers declarator F compound-statement .

    $default  reduce using rule 157 (function-definition)


State 79

  107 identifier-list: IDENTIFIER .

    $default  reduce using rule 107 (identifier-list)


State 80

   99 direct-declarator: direct-declarator '(' ')' .

    $default  reduce using rule 99 (direct-declarator)


State 81

  105 parameter-declaration: declaration-specifiers . declarator
  106                      | declaration-specifiers .

    IDENTIFIER  shift, and go to state 17
    '('         shift, and go to state 18
    '*'         shift, and go to state 19

    $default  reduce using rule 106 (parameter-declaration)

    declarator         go to state 165
    direct-declarator  go to state 24
    pointer            go to state 25


State 82

   97 direct-declarator: direct-declarator '(' parameter-type-list . ')'

    ')'  shift, and go to state 166


State 83

  102 parameter-type-list: parameter-list .
  104 parameter-list: parameter-list . ',' parameter-declaration

    ','  shift, and go to state 167

    $default  reduce using rule 102 (parameter-type-list)


State 84

  103 parameter-list: parameter-declaration .

    $default  reduce using rule 103 (parameter-list)


State 85

   98 direct-declarator: direct-declarator '(' identifier-list . ')'
  108 identifier-list: identifier-list . ',' IDENTIFIER

    ')'  shift, and go to state 168
    ','  shift, and go to state 169


State 86

   96 direct-declarator: direct-declarator '[' ']' .

    $default  reduce using rule 96 (direct-declarator)


State 87

   95 direct-declarator: direct-declarator '[' assignment-expression . ']'

    ']'  shift, and go to state 170


State 88

   23 unary-expression: INC_OP unary-expression .

    $default  reduce using rule 23 (unary-expression)


State 89

   24 unary-expression: DEC_OP unary-expression .

    $default  reduce using rule 24 (unary-expression)


State 90

   70 expression: assignment-expression .

    $default  reduce using rule 70 (expression)


State 91

    6 primary-expression: '(' expression . ')'
   71 expression: expression . ',' assignment-expression

    ')'  shift, and go to state 171
    ','  shift, and go to state 172


State 92

  120 designator: '[' . constant-expression ']'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 173
    constant-expression        go to state 174


State 93

  121 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 94

  114 initializer-row: initializer .

    $default  reduce using rule 114 (initializer-row)


State 95

  110 initializer: '{' initializer-row-list . '}'
  112 initializer-row-list: initializer-row-list . ';' initializer-row

    ';'  shift, and go to state 176
    '}'  shift, and go to state 177


State 96

  111 initializer-row-list: initializer-row .
  115 initializer-row: initializer-row . ',' designation initializer
  116                | initializer-row . ',' initializer

    ','  shift, and go to state 178

    $default  reduce using rule 111 (initializer-row-list)


State 97

  113 initializer-row: designation . initializer

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    '{'               shift, and go to state 56

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 73
    initializer                go to state 179


State 98

  117 designation: designator-list . '='
  119 designator-list: designator-list . designator

    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    '='  shift, and go to state 180

    designator  go to state 181


State 99

  118 designator-list: designator .

    $default  reduce using rule 118 (designator-list)


State 100

   12 postfix-expression: postfix-expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 182


State 101

   13 postfix-expression: postfix-expression INC_OP .

    $default  reduce using rule 13 (postfix-expression)


State 102

   14 postfix-expression: postfix-expression DEC_OP .

    $default  reduce using rule 14 (postfix-expression)


State 103

   15 postfix-expression: postfix-expression TRA_OP .

    $default  reduce using rule 15 (postfix-expression)


State 104

    9 postfix-expression: postfix-expression '(' . argument-expression-list ')'
   10                   | postfix-expression '(' . ')'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    ')'               shift, and go to state 183
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    argument-expression-list   go to state 184
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 185


State 105

    8 postfix-expression: postfix-expression '[' . expression ']'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 186


State 106

   11 postfix-expression: postfix-expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


State 107

   26 cast-expression: unary-expression .

    $default  reduce using rule 26 (cast-expression)


State 108

   25 unary-expression: unary-operator cast-expression .

    $default  reduce using rule 25 (unary-expression)


State 109

   60 assignment-operator: MULA_OP .

    $default  reduce using rule 60 (assignment-operator)


State 110

   61 assignment-operator: DIVA_OP .

    $default  reduce using rule 61 (assignment-operator)


State 111

   62 assignment-operator: REMA_OP .

    $default  reduce using rule 62 (assignment-operator)


State 112

   63 assignment-operator: ADDA_OP .

    $default  reduce using rule 63 (assignment-operator)


State 113

   64 assignment-operator: SUBA_OP .

    $default  reduce using rule 64 (assignment-operator)


State 114

   65 assignment-operator: LSA_OP .

    $default  reduce using rule 65 (assignment-operator)


State 115

   66 assignment-operator: RSA_OP .

    $default  reduce using rule 66 (assignment-operator)


State 116

   67 assignment-operator: ANDA_OP .

    $default  reduce using rule 67 (assignment-operator)


State 117

   68 assignment-operator: POWA_OP .

    $default  reduce using rule 68 (assignment-operator)


State 118

   69 assignment-operator: ORA_OP .

    $default  reduce using rule 69 (assignment-operator)


State 119

   59 assignment-operator: '=' .

    $default  reduce using rule 59 (assignment-operator)


State 120

   58 assignment-expression: unary-expression assignment-operator . assignment-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 188


State 121

   28 multiplicative-expression: multiplicative-expression '*' . cast-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression  go to state 57
    postfix-expression  go to state 58
    unary-operator      go to state 59
    unary-expression    go to state 107
    cast-expression     go to state 189


State 122

   29 multiplicative-expression: multiplicative-expression '/' . cast-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression  go to state 57
    postfix-expression  go to state 58
    unary-operator      go to state 59
    unary-expression    go to state 107
    cast-expression     go to state 190


State 123

   30 multiplicative-expression: multiplicative-expression '%' . cast-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression  go to state 57
    postfix-expression  go to state 58
    unary-operator      go to state 59
    unary-expression    go to state 107
    cast-expression     go to state 191


State 124

   32 additive-expression: additive-expression '+' . multiplicative-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 192


State 125

   33 additive-expression: additive-expression '-' . multiplicative-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 193


State 126

   35 shift-expression: shift-expression LSHIFT_OP . additive-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 194


State 127

   36 shift-expression: shift-expression RSHIFT_OP . additive-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 195


State 128

   40 relational-expression: relational-expression LEQ_OP . shift-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 196


State 129

   41 relational-expression: relational-expression GEQ_OP . shift-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 197


State 130

   38 relational-expression: relational-expression '<' . shift-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 198


State 131

   39 relational-expression: relational-expression '>' . shift-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 199


State 132

   43 equality-expression: equality-expression EQ_OP . relational-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 200


State 133

   44 equality-expression: equality-expression NEQ_OP . relational-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 201


State 134

   46 AND-expression: AND-expression '&' . equality-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 202


State 135

   48 exclusive-OR-expression: exclusive-OR-expression '^' . AND-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 203


State 136

   50 inclusive-OR-expression: inclusive-OR-expression '|' . exclusive-OR-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 204


State 137

   52 logical-AND-expression: logical-AND-expression AND_OP . M inclusive-OR-expression

    $default  reduce using rule 160 (M)

    M  go to state 205


State 138

   54 logical-OR-expression: logical-OR-expression OR_OP . M logical-AND-expression

    $default  reduce using rule 160 (M)

    M  go to state 206


State 139

   56 conditional-expression: logical-OR-expression N . '?' M expression N ':' M conditional-expression

    '?'  shift, and go to state 207


State 140

    1 primary-expression: IDENTIFIER .
  130 labeled-statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 208

    $default  reduce using rule 1 (primary-expression)


State 141

  149 jump-statement: BREAK . ';'

    ';'  shift, and go to state 209


State 142

  150 jump-statement: RETURN . expression ';'
  151               | RETURN . ';'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 210

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 211


State 143

  131 labeled-statement: CASE . constant-expression ':' statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 173
    constant-expression        go to state 212


State 144

  144 iteration-statement: FOR . '(' expression-statement M expression-statement N M expression N ')' M statement
  145                    | FOR . '(' declaration expression-statement expression ')' statement
  146                    | FOR . '(' declaration expression-statement ')' statement

    '('  shift, and go to state 213


State 145

  142 iteration-statement: WHILE . M '(' expression N ')' M statement

    $default  reduce using rule 160 (M)

    M  go to state 214


State 146

  147 jump-statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 215


State 147

  148 jump-statement: CONTINUE . ';'

    ';'  shift, and go to state 216


State 148

  139 selection-statement: IF . '(' expression N ')' M statement N
  140                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 217


State 149

  132 labeled-statement: DEFAULT . ':' statement

    ':'  shift, and go to state 218


State 150

  143 iteration-statement: DO . M statement M WHILE '(' expression N ')'

    $default  reduce using rule 160 (M)

    M  go to state 219


State 151

  141 selection-statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 220


State 152

  129 expression-statement: ';' .

    $default  reduce using rule 129 (expression-statement)


State 153

  134 compound-statement: '{' '}' .

    $default  reduce using rule 134 (compound-statement)


State 154

   71 expression: expression . ',' assignment-expression
  128 expression-statement: expression . ';'

    ','  shift, and go to state 172
    ';'  shift, and go to state 221


State 155

  137 block-item: declaration .

    $default  reduce using rule 137 (block-item)


State 156

  138 block-item: statement .

    $default  reduce using rule 138 (block-item)


State 157

  124 statement: expression-statement .

    $default  reduce using rule 124 (statement)


State 158

  122 statement: labeled-statement .

    $default  reduce using rule 122 (statement)


State 159

  123 statement: compound-statement .

    $default  reduce using rule 123 (statement)


State 160

  133 compound-statement: '{' block-item-list . '}'
  136 block-item-list: block-item-list . M block-item

    '}'  shift, and go to state 222

    $default  reduce using rule 160 (M)

    M  go to state 223


State 161

  135 block-item-list: block-item .

    $default  reduce using rule 135 (block-item-list)


State 162

  125 statement: selection-statement .

    $default  reduce using rule 125 (statement)


State 163

  126 statement: iteration-statement .

    $default  reduce using rule 126 (statement)


State 164

  127 statement: jump-statement .

    $default  reduce using rule 127 (statement)


State 165

  105 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 105 (parameter-declaration)


State 166

   97 direct-declarator: direct-declarator '(' parameter-type-list ')' .

    $default  reduce using rule 97 (direct-declarator)


State 167

  104 parameter-list: parameter-list ',' . parameter-declaration

    UNSIGNED  shift, and go to state 1
    VOID      shift, and go to state 2
    FLOAT     shift, and go to state 3
    SHORT     shift, and go to state 4
    CHAR      shift, and go to state 5
    SIGNED    shift, and go to state 6
    BOOL      shift, and go to state 7
    INT       shift, and go to state 8
    DOUBLE    shift, and go to state 9
    MATRIX    shift, and go to state 10

    declaration-specifiers  go to state 81
    type-specifiers         go to state 13
    parameter-declaration   go to state 224


State 168

   98 direct-declarator: direct-declarator '(' identifier-list ')' .

    $default  reduce using rule 98 (direct-declarator)


State 169

  108 identifier-list: identifier-list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 170

   95 direct-declarator: direct-declarator '[' assignment-expression ']' .

    $default  reduce using rule 95 (direct-declarator)


State 171

    6 primary-expression: '(' expression ')' .

    $default  reduce using rule 6 (primary-expression)


State 172

   71 expression: expression ',' . assignment-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 226


State 173

   72 constant-expression: conditional-expression .

    $default  reduce using rule 72 (constant-expression)


State 174

  120 designator: '[' constant-expression . ']'

    ']'  shift, and go to state 227


State 175

  121 designator: '.' IDENTIFIER .

    $default  reduce using rule 121 (designator)


State 176

  112 initializer-row-list: initializer-row-list ';' . initializer-row

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '['               shift, and go to state 92
    '.'               shift, and go to state 93
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    '{'               shift, and go to state 56

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 73
    initializer                go to state 94
    initializer-row            go to state 228
    designation                go to state 97
    designator-list            go to state 98
    designator                 go to state 99


State 177

  110 initializer: '{' initializer-row-list '}' .

    $default  reduce using rule 110 (initializer)


State 178

  115 initializer-row: initializer-row ',' . designation initializer
  116                | initializer-row ',' . initializer

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '['               shift, and go to state 92
    '.'               shift, and go to state 93
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    '{'               shift, and go to state 56

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 73
    initializer                go to state 229
    designation                go to state 230
    designator-list            go to state 98
    designator                 go to state 99


State 179

  113 initializer-row: designation initializer .

    $default  reduce using rule 113 (initializer-row)


State 180

  117 designation: designator-list '=' .

    $default  reduce using rule 117 (designation)


State 181

  119 designator-list: designator-list designator .

    $default  reduce using rule 119 (designator-list)


State 182

   12 postfix-expression: postfix-expression PTR_OP IDENTIFIER .

    $default  reduce using rule 12 (postfix-expression)


State 183

   10 postfix-expression: postfix-expression '(' ')' .

    $default  reduce using rule 10 (postfix-expression)


State 184

    9 postfix-expression: postfix-expression '(' argument-expression-list . ')'
   17 argument-expression-list: argument-expression-list . ',' assignment-expression

    ')'  shift, and go to state 231
    ','  shift, and go to state 232


State 185

   16 argument-expression-list: assignment-expression .

    $default  reduce using rule 16 (argument-expression-list)


State 186

    8 postfix-expression: postfix-expression '[' expression . ']'
   71 expression: expression . ',' assignment-expression

    ']'  shift, and go to state 233
    ','  shift, and go to state 172


State 187

   11 postfix-expression: postfix-expression '.' IDENTIFIER .

    $default  reduce using rule 11 (postfix-expression)


State 188

   58 assignment-expression: unary-expression assignment-operator assignment-expression .

    $default  reduce using rule 58 (assignment-expression)


State 189

   28 multiplicative-expression: multiplicative-expression '*' cast-expression .

    $default  reduce using rule 28 (multiplicative-expression)


State 190

   29 multiplicative-expression: multiplicative-expression '/' cast-expression .

    $default  reduce using rule 29 (multiplicative-expression)


State 191

   30 multiplicative-expression: multiplicative-expression '%' cast-expression .

    $default  reduce using rule 30 (multiplicative-expression)


State 192

   28 multiplicative-expression: multiplicative-expression . '*' cast-expression
   29                          | multiplicative-expression . '/' cast-expression
   30                          | multiplicative-expression . '%' cast-expression
   32 additive-expression: additive-expression '+' multiplicative-expression .

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 32 (additive-expression)


State 193

   28 multiplicative-expression: multiplicative-expression . '*' cast-expression
   29                          | multiplicative-expression . '/' cast-expression
   30                          | multiplicative-expression . '%' cast-expression
   33 additive-expression: additive-expression '-' multiplicative-expression .

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 33 (additive-expression)


State 194

   32 additive-expression: additive-expression . '+' multiplicative-expression
   33                    | additive-expression . '-' multiplicative-expression
   35 shift-expression: shift-expression LSHIFT_OP additive-expression .

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125

    $default  reduce using rule 35 (shift-expression)


State 195

   32 additive-expression: additive-expression . '+' multiplicative-expression
   33                    | additive-expression . '-' multiplicative-expression
   36 shift-expression: shift-expression RSHIFT_OP additive-expression .

    '+'  shift, and go to state 124
    '-'  shift, and go to state 125

    $default  reduce using rule 36 (shift-expression)


State 196

   35 shift-expression: shift-expression . LSHIFT_OP additive-expression
   36                 | shift-expression . RSHIFT_OP additive-expression
   40 relational-expression: relational-expression LEQ_OP shift-expression .

    LSHIFT_OP  shift, and go to state 126
    RSHIFT_OP  shift, and go to state 127

    $default  reduce using rule 40 (relational-expression)


State 197

   35 shift-expression: shift-expression . LSHIFT_OP additive-expression
   36                 | shift-expression . RSHIFT_OP additive-expression
   41 relational-expression: relational-expression GEQ_OP shift-expression .

    LSHIFT_OP  shift, and go to state 126
    RSHIFT_OP  shift, and go to state 127

    $default  reduce using rule 41 (relational-expression)


State 198

   35 shift-expression: shift-expression . LSHIFT_OP additive-expression
   36                 | shift-expression . RSHIFT_OP additive-expression
   38 relational-expression: relational-expression '<' shift-expression .

    LSHIFT_OP  shift, and go to state 126
    RSHIFT_OP  shift, and go to state 127

    $default  reduce using rule 38 (relational-expression)


State 199

   35 shift-expression: shift-expression . LSHIFT_OP additive-expression
   36                 | shift-expression . RSHIFT_OP additive-expression
   39 relational-expression: relational-expression '>' shift-expression .

    LSHIFT_OP  shift, and go to state 126
    RSHIFT_OP  shift, and go to state 127

    $default  reduce using rule 39 (relational-expression)


State 200

   38 relational-expression: relational-expression . '<' shift-expression
   39                      | relational-expression . '>' shift-expression
   40                      | relational-expression . LEQ_OP shift-expression
   41                      | relational-expression . GEQ_OP shift-expression
   43 equality-expression: equality-expression EQ_OP relational-expression .

    LEQ_OP  shift, and go to state 128
    GEQ_OP  shift, and go to state 129
    '<'     shift, and go to state 130
    '>'     shift, and go to state 131

    $default  reduce using rule 43 (equality-expression)


State 201

   38 relational-expression: relational-expression . '<' shift-expression
   39                      | relational-expression . '>' shift-expression
   40                      | relational-expression . LEQ_OP shift-expression
   41                      | relational-expression . GEQ_OP shift-expression
   44 equality-expression: equality-expression NEQ_OP relational-expression .

    LEQ_OP  shift, and go to state 128
    GEQ_OP  shift, and go to state 129
    '<'     shift, and go to state 130
    '>'     shift, and go to state 131

    $default  reduce using rule 44 (equality-expression)


State 202

   43 equality-expression: equality-expression . EQ_OP relational-expression
   44                    | equality-expression . NEQ_OP relational-expression
   46 AND-expression: AND-expression '&' equality-expression .

    EQ_OP   shift, and go to state 132
    NEQ_OP  shift, and go to state 133

    $default  reduce using rule 46 (AND-expression)


State 203

   46 AND-expression: AND-expression . '&' equality-expression
   48 exclusive-OR-expression: exclusive-OR-expression '^' AND-expression .

    '&'  shift, and go to state 134

    $default  reduce using rule 48 (exclusive-OR-expression)


State 204

   48 exclusive-OR-expression: exclusive-OR-expression . '^' AND-expression
   50 inclusive-OR-expression: inclusive-OR-expression '|' exclusive-OR-expression .

    '^'  shift, and go to state 135

    $default  reduce using rule 50 (inclusive-OR-expression)


State 205

   52 logical-AND-expression: logical-AND-expression AND_OP M . inclusive-OR-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 234


State 206

   54 logical-OR-expression: logical-OR-expression OR_OP M . logical-AND-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 235


State 207

   56 conditional-expression: logical-OR-expression N '?' . M expression N ':' M conditional-expression

    $default  reduce using rule 160 (M)

    M  go to state 236


State 208

  130 labeled-statement: IDENTIFIER ':' . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 237
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 209

  149 jump-statement: BREAK ';' .

    $default  reduce using rule 149 (jump-statement)


State 210

  151 jump-statement: RETURN ';' .

    $default  reduce using rule 151 (jump-statement)


State 211

   71 expression: expression . ',' assignment-expression
  150 jump-statement: RETURN expression . ';'

    ','  shift, and go to state 172
    ';'  shift, and go to state 238


State 212

  131 labeled-statement: CASE constant-expression . ':' statement

    ':'  shift, and go to state 239


State 213

  144 iteration-statement: FOR '(' . expression-statement M expression-statement N M expression N ')' M statement
  145                    | FOR '(' . declaration expression-statement expression ')' statement
  146                    | FOR '(' . declaration expression-statement ')' statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    UNSIGNED          shift, and go to state 1
    VOID              shift, and go to state 2
    FLOAT             shift, and go to state 3
    SHORT             shift, and go to state 4
    CHAR              shift, and go to state 5
    SIGNED            shift, and go to state 6
    BOOL              shift, and go to state 7
    INT               shift, and go to state 8
    DOUBLE            shift, and go to state 9
    MATRIX            shift, and go to state 10
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    declaration                go to state 240
    declaration-specifiers     go to state 35
    type-specifiers            go to state 13
    expression-statement       go to state 241


State 214

  142 iteration-statement: WHILE M . '(' expression N ')' M statement

    '('  shift, and go to state 242


State 215

  147 jump-statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 243


State 216

  148 jump-statement: CONTINUE ';' .

    $default  reduce using rule 148 (jump-statement)


State 217

  139 selection-statement: IF '(' . expression N ')' M statement N
  140                    | IF '(' . expression N ')' M statement N ELSE M statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 244


State 218

  132 labeled-statement: DEFAULT ':' . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 245
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 219

  143 iteration-statement: DO M . statement M WHILE '(' expression N ')'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 246
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 220

  141 selection-statement: SWITCH '(' . expression ')' statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 247


State 221

  128 expression-statement: expression ';' .

    $default  reduce using rule 128 (expression-statement)


State 222

  133 compound-statement: '{' block-item-list '}' .

    $default  reduce using rule 133 (compound-statement)


State 223

  136 block-item-list: block-item-list M . block-item

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    UNSIGNED          shift, and go to state 1
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    VOID              shift, and go to state 2
    CASE              shift, and go to state 143
    FLOAT             shift, and go to state 3
    SHORT             shift, and go to state 4
    CHAR              shift, and go to state 5
    FOR               shift, and go to state 144
    SIGNED            shift, and go to state 6
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    BOOL              shift, and go to state 7
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    INT               shift, and go to state 8
    SWITCH            shift, and go to state 151
    DOUBLE            shift, and go to state 9
    MATRIX            shift, and go to state 10
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    declaration                go to state 155
    declaration-specifiers     go to state 35
    type-specifiers            go to state 13
    statement                  go to state 156
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    block-item                 go to state 248
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 224

  104 parameter-list: parameter-list ',' parameter-declaration .

    $default  reduce using rule 104 (parameter-list)


State 225

  108 identifier-list: identifier-list ',' IDENTIFIER .

    $default  reduce using rule 108 (identifier-list)


State 226

   71 expression: expression ',' assignment-expression .

    $default  reduce using rule 71 (expression)


State 227

  120 designator: '[' constant-expression ']' .

    $default  reduce using rule 120 (designator)


State 228

  112 initializer-row-list: initializer-row-list ';' initializer-row .
  115 initializer-row: initializer-row . ',' designation initializer
  116                | initializer-row . ',' initializer

    ','  shift, and go to state 178

    $default  reduce using rule 112 (initializer-row-list)


State 229

  116 initializer-row: initializer-row ',' initializer .

    $default  reduce using rule 116 (initializer-row)


State 230

  115 initializer-row: initializer-row ',' designation . initializer

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    '{'               shift, and go to state 56

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 73
    initializer                go to state 249


State 231

    9 postfix-expression: postfix-expression '(' argument-expression-list ')' .

    $default  reduce using rule 9 (postfix-expression)


State 232

   17 argument-expression-list: argument-expression-list ',' . assignment-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 250


State 233

    8 postfix-expression: postfix-expression '[' expression ']' .

    $default  reduce using rule 8 (postfix-expression)


State 234

   50 inclusive-OR-expression: inclusive-OR-expression . '|' exclusive-OR-expression
   52 logical-AND-expression: logical-AND-expression AND_OP M inclusive-OR-expression .

    '|'  shift, and go to state 136

    $default  reduce using rule 52 (logical-AND-expression)


State 235

   52 logical-AND-expression: logical-AND-expression . AND_OP M inclusive-OR-expression
   54 logical-OR-expression: logical-OR-expression OR_OP M logical-AND-expression .

    AND_OP  shift, and go to state 137

    $default  reduce using rule 54 (logical-OR-expression)


State 236

   56 conditional-expression: logical-OR-expression N '?' M . expression N ':' M conditional-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 251


State 237

  130 labeled-statement: IDENTIFIER ':' statement .

    $default  reduce using rule 130 (labeled-statement)


State 238

  150 jump-statement: RETURN expression ';' .

    $default  reduce using rule 150 (jump-statement)


State 239

  131 labeled-statement: CASE constant-expression ':' . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 252
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 240

  145 iteration-statement: FOR '(' declaration . expression-statement expression ')' statement
  146                    | FOR '(' declaration . expression-statement ')' statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    expression-statement       go to state 253


State 241

  144 iteration-statement: FOR '(' expression-statement . M expression-statement N M expression N ')' M statement

    $default  reduce using rule 160 (M)

    M  go to state 254


State 242

  142 iteration-statement: WHILE M '(' . expression N ')' M statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 255


State 243

  147 jump-statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 147 (jump-statement)


State 244

   71 expression: expression . ',' assignment-expression
  139 selection-statement: IF '(' expression . N ')' M statement N
  140                    | IF '(' expression . N ')' M statement N ELSE M statement

    ','  shift, and go to state 172

    $default  reduce using rule 161 (N)

    N  go to state 256


State 245

  132 labeled-statement: DEFAULT ':' statement .

    $default  reduce using rule 132 (labeled-statement)


State 246

  143 iteration-statement: DO M statement . M WHILE '(' expression N ')'

    $default  reduce using rule 160 (M)

    M  go to state 257


State 247

   71 expression: expression . ',' assignment-expression
  141 selection-statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 258
    ','  shift, and go to state 172


State 248

  136 block-item-list: block-item-list M block-item .

    $default  reduce using rule 136 (block-item-list)


State 249

  115 initializer-row: initializer-row ',' designation initializer .

    $default  reduce using rule 115 (initializer-row)


State 250

   17 argument-expression-list: argument-expression-list ',' assignment-expression .

    $default  reduce using rule 17 (argument-expression-list)


State 251

   56 conditional-expression: logical-OR-expression N '?' M expression . N ':' M conditional-expression
   71 expression: expression . ',' assignment-expression

    ','  shift, and go to state 172

    $default  reduce using rule 161 (N)

    N  go to state 259


State 252

  131 labeled-statement: CASE constant-expression ':' statement .

    $default  reduce using rule 131 (labeled-statement)


State 253

  145 iteration-statement: FOR '(' declaration expression-statement . expression ')' statement
  146                    | FOR '(' declaration expression-statement . ')' statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    ')'               shift, and go to state 260
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 261


State 254

  144 iteration-statement: FOR '(' expression-statement M . expression-statement N M expression N ')' M statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    expression-statement       go to state 262


State 255

   71 expression: expression . ',' assignment-expression
  142 iteration-statement: WHILE M '(' expression . N ')' M statement

    ','  shift, and go to state 172

    $default  reduce using rule 161 (N)

    N  go to state 263


State 256

  139 selection-statement: IF '(' expression N . ')' M statement N
  140                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 264


State 257

  143 iteration-statement: DO M statement M . WHILE '(' expression N ')'

    WHILE  shift, and go to state 265


State 258

  141 selection-statement: SWITCH '(' expression ')' . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 266
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 259

   56 conditional-expression: logical-OR-expression N '?' M expression N . ':' M conditional-expression

    ':'  shift, and go to state 267


State 260

  146 iteration-statement: FOR '(' declaration expression-statement ')' . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 268
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 261

   71 expression: expression . ',' assignment-expression
  145 iteration-statement: FOR '(' declaration expression-statement expression . ')' statement

    ')'  shift, and go to state 269
    ','  shift, and go to state 172


State 262

  144 iteration-statement: FOR '(' expression-statement M expression-statement . N M expression N ')' M statement

    $default  reduce using rule 161 (N)

    N  go to state 270


State 263

  142 iteration-statement: WHILE M '(' expression N . ')' M statement

    ')'  shift, and go to state 271


State 264

  139 selection-statement: IF '(' expression N ')' . M statement N
  140                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 160 (M)

    M  go to state 272


State 265

  143 iteration-statement: DO M statement M WHILE . '(' expression N ')'

    '('  shift, and go to state 273


State 266

  141 selection-statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 141 (selection-statement)


State 267

   56 conditional-expression: logical-OR-expression N '?' M expression N ':' . M conditional-expression

    $default  reduce using rule 160 (M)

    M  go to state 274


State 268

  146 iteration-statement: FOR '(' declaration expression-statement ')' statement .

    $default  reduce using rule 146 (iteration-statement)


State 269

  145 iteration-statement: FOR '(' declaration expression-statement expression ')' . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 275
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 270

  144 iteration-statement: FOR '(' expression-statement M expression-statement N . M expression N ')' M statement

    $default  reduce using rule 160 (M)

    M  go to state 276


State 271

  142 iteration-statement: WHILE M '(' expression N ')' . M statement

    $default  reduce using rule 160 (M)

    M  go to state 277


State 272

  139 selection-statement: IF '(' expression N ')' M . statement N
  140                    | IF '(' expression N ')' M . statement N ELSE M statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 278
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 273

  143 iteration-statement: DO M statement M WHILE '(' . expression N ')'

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 279


State 274

   56 conditional-expression: logical-OR-expression N '?' M expression N ':' M . conditional-expression

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 107
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 280


State 275

  145 iteration-statement: FOR '(' declaration expression-statement expression ')' statement .

    $default  reduce using rule 145 (iteration-statement)


State 276

  144 iteration-statement: FOR '(' expression-statement M expression-statement N M . expression N ')' M statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 47
    STRING            shift, and go to state 48
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 281


State 277

  142 iteration-statement: WHILE M '(' expression N ')' M . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 282
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 278

  139 selection-statement: IF '(' expression N ')' M statement . N
  140                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 161 (N)

    N  go to state 283


State 279

   71 expression: expression . ',' assignment-expression
  143 iteration-statement: DO M statement M WHILE '(' expression . N ')'

    ','  shift, and go to state 172

    $default  reduce using rule 161 (N)

    N  go to state 284


State 280

   56 conditional-expression: logical-OR-expression N '?' M expression N ':' M conditional-expression .

    $default  reduce using rule 56 (conditional-expression)


State 281

   71 expression: expression . ',' assignment-expression
  144 iteration-statement: FOR '(' expression-statement M expression-statement N M expression . N ')' M statement

    ','  shift, and go to state 172

    $default  reduce using rule 161 (N)

    N  go to state 285


State 282

  142 iteration-statement: WHILE M '(' expression N ')' M statement .

    $default  reduce using rule 142 (iteration-statement)


State 283

  139 selection-statement: IF '(' expression N ')' M statement N .
  140                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 286

    $default  reduce using rule 139 (selection-statement)


State 284

  143 iteration-statement: DO M statement M WHILE '(' expression N . ')'

    ')'  shift, and go to state 287


State 285

  144 iteration-statement: FOR '(' expression-statement M expression-statement N M expression N . ')' M statement

    ')'  shift, and go to state 288


State 286

  140 selection-statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 160 (M)

    M  go to state 289


State 287

  143 iteration-statement: DO M statement M WHILE '(' expression N ')' .

    $default  reduce using rule 143 (iteration-statement)


State 288

  144 iteration-statement: FOR '(' expression-statement M expression-statement N M expression N ')' . M statement

    $default  reduce using rule 160 (M)

    M  go to state 290


State 289

  140 selection-statement: IF '(' expression N ')' M statement N ELSE M . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 291
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 290

  144 iteration-statement: FOR '(' expression-statement M expression-statement N M expression N ')' M . statement

    INTEGER_CONSTANT  shift, and go to state 44
    FLOAT_CONSTANT    shift, and go to state 45
    CHAR_CONSTANT     shift, and go to state 46
    IDENTIFIER        shift, and go to state 140
    STRING            shift, and go to state 48
    BREAK             shift, and go to state 141
    RETURN            shift, and go to state 142
    CASE              shift, and go to state 143
    FOR               shift, and go to state 144
    WHILE             shift, and go to state 145
    GOTO              shift, and go to state 146
    CONTINUE          shift, and go to state 147
    IF                shift, and go to state 148
    DEFAULT           shift, and go to state 149
    DO                shift, and go to state 150
    SWITCH            shift, and go to state 151
    INC_OP            shift, and go to state 49
    DEC_OP            shift, and go to state 50
    '('               shift, and go to state 51
    '&'               shift, and go to state 52
    '*'               shift, and go to state 53
    '+'               shift, and go to state 54
    '-'               shift, and go to state 55
    ';'               shift, and go to state 152
    '{'               shift, and go to state 75

    primary-expression         go to state 57
    postfix-expression         go to state 58
    unary-operator             go to state 59
    unary-expression           go to state 60
    cast-expression            go to state 61
    multiplicative-expression  go to state 62
    additive-expression        go to state 63
    shift-expression           go to state 64
    relational-expression      go to state 65
    equality-expression        go to state 66
    AND-expression             go to state 67
    exclusive-OR-expression    go to state 68
    inclusive-OR-expression    go to state 69
    logical-AND-expression     go to state 70
    logical-OR-expression      go to state 71
    conditional-expression     go to state 72
    assignment-expression      go to state 90
    expression                 go to state 154
    statement                  go to state 292
    expression-statement       go to state 157
    labeled-statement          go to state 158
    compound-statement         go to state 159
    selection-statement        go to state 162
    iteration-statement        go to state 163
    jump-statement             go to state 164


State 291

  140 selection-statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 140 (selection-statement)


State 292

  144 iteration-statement: FOR '(' expression-statement M expression-statement N M expression N ')' M statement .

    $default  reduce using rule 144 (iteration-statement)
